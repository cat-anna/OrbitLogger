/*
  * Generated by cppsrc.sh
  * On 2015-03-29 12:49:26,87
  * by Paweu
*/
/*--END OF HEADER BLOCK--*/
#include "OrbitLogger.h"
#include "Platform.h"

#ifdef WINDOWS
#define WIN32_LEAN_AND_MEAN
#include <Windows.h>
#elif defined(LINUX)
#error Missing Linux implementation
#else
#error Unknown OS
#endif

namespace OrbitLogger {

thread_local bool ThreadInfo::_IsMain = false;
thread_local ThreadInfo::Signature ThreadInfo::_ThisThreadSignature = '\0?';

void ThreadInfo::SetName(const char* sign, bool IsMain) {
	if (sign) {
		Signature *signsrc = (Signature*)sign;
		_ThisThreadSignature = *signsrc;
	}
	_IsMain = IsMain;
}

ThreadInfo::NumericID ThreadInfo::GetID() {
#ifdef WINDOWS
	return static_cast<NumericID>(GetCurrentThreadId());
#elif defined(LINUX)
#error Missing Linux implementation
#else
#error Unknown OS
#endif
}

} //namespace OrbitLogger
